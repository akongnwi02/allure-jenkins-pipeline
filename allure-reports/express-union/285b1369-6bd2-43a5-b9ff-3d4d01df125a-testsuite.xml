<?xml version="1.0" encoding="UTF-8"?>
<alr:test-suite xmlns:alr="urn:model.allure.qatools.yandex.ru" start="1638402892723" stop="1638402921400" version="1.4.0">
  <name>service_orangeom</name>
  <test-cases>
    <test-case start="1638402892727" stop="1638402892728" status="canceled">
      <name>testIfConnectorOffersEndpointToPauseAndContinueProcessingProcessingOfPayment</name>
      <failure>
        <message></message>
        <stack-trace>#0 /tests/vendor/codeception/codeception/src/Codeception/Test/Test.php(79): Codeception\Test\Test-&gt;ignoreIfMetadataBlockedStart()
#1 /tests/vendor/phpunit/phpunit/src/Framework/TestSuite.php(755): Codeception\Test\Test-&gt;run(Object(PHPUnit\Framework\TestResult))
#2 /tests/vendor/codeception/phpunit-wrapper/src/Runner.php(110): PHPUnit\Framework\TestSuite-&gt;run(Object(PHPUnit\Framework\TestResult))
#3 /tests/vendor/codeception/codeception/src/Codeception/SuiteManager.php(158): Codeception\PHPUnit\Runner-&gt;doEnhancedRun(Object(Codeception\Suite), Object(PHPUnit\Framework\TestResult), Array)
#4 /tests/vendor/codeception/codeception/src/Codeception/Codecept.php(193): Codeception\SuiteManager-&gt;run(Object(Codeception\PHPUnit\Runner), Object(PHPUnit\Framework\TestResult), Array)
#5 /tests/vendor/codeception/codeception/src/Codeception/Codecept.php(160): Codeception\Codecept-&gt;runSuite(Array, 'service_orangeo...', 'OrangeOMSystemC...')
#6 /tests/vendor/codeception/codeception/src/Codeception/Command/Run.php(391): Codeception\Codecept-&gt;run('service_orangeo...', 'OrangeOMSystemC...', Array)
#7 /tests/vendor/symfony/console/Command/Command.php(255): Codeception\Command\Run-&gt;execute(Object(Symfony\Component\Console\Input\ArgvInput), Object(Symfony\Component\Console\Output\ConsoleOutput))
#8 /tests/vendor/symfony/console/Application.php(992): Symfony\Component\Console\Command\Command-&gt;run(Object(Symfony\Component\Console\Input\ArgvInput), Object(Symfony\Component\Console\Output\ConsoleOutput))
#9 /tests/vendor/symfony/console/Application.php(255): Symfony\Component\Console\Application-&gt;doRunCommand(Object(Codeception\Command\Run), Object(Symfony\Component\Console\Input\ArgvInput), Object(Symfony\Component\Console\Output\ConsoleOutput))
#10 /tests/vendor/symfony/console/Application.php(148): Symfony\Component\Console\Application-&gt;doRun(Object(Symfony\Component\Console\Input\ArgvInput), Object(Symfony\Component\Console\Output\ConsoleOutput))
#11 /tests/vendor/codeception/codeception/src/Codeception/Application.php(107): Symfony\Component\Console\Application-&gt;run(Object(Symfony\Component\Console\Input\ArgvInput), Object(Symfony\Component\Console\Output\ConsoleOutput))
#12 /tests/vendor/codeception/codeception/codecept(43): Codeception\Application-&gt;run()
#13 {main}</stack-trace>
      </failure>
      <labels>
        <label name="testMethod" value="testIfConnectorOffersEndpointToPauseAndContinueProcessingProcessingOfPayment"/>
        <label name="testClass" value="OrangeOMSystemCest"/>
      </labels>
    </test-case>
    <test-case start="1638402892729" stop="1638402903366" status="passed">
      <name>itCannotProcessATransactionWhenRemoteServerIsDown</name>
      <steps>
        <step start="1638402893217" stop="1638402893217" status="passed">
          <name><![CDATA[have http header "x-api-key","TESTKEY"]]></name>
        </step>
        <step start="1638402893217" stop="1638402893217" status="passed">
          <name><![CDATA[have http header "x-api-version","v1"]]></name>
        </step>
        <step start="1638402893218" stop="1638402893218" status="passed">
          <name><![CDATA[have http header "content-type","application/json"]]></name>
        </step>
        <step start="1638402893218" stop="1638402893290" status="passed">
          <name><![CDATA[send put "http://mockserver:1090/mockserver/reset"]]></name>
        </step>
        <step start="1638402893290" stop="1638402893293" status="passed">
          <name><![CDATA[clear queue "Orange_paymentrequest"]]></name>
        </step>
        <step start="1638402893294" stop="1638402893294" status="passed">
          <name><![CDATA[clear queue "Orange_statuscheck"]]></name>
        </step>
        <step start="1638402893294" stop="1638402893295" status="passed">
          <name><![CDATA[clear queue "Orange_callback"]]></name>
        </step>
        <step start="1638402893295" stop="1638402893295" status="passed">
          <name><![CDATA[clear queue "default"]]></name>
        </step>
        <step start="1638402893296" stop="1638402893301" status="passed">
          <name><![CDATA[update in database "health_result",{"is_healthy":0,"info":"NOK"},{"label":"remote"}]]></name>
        </step>
        <step start="1638402893302" stop="1638402903363" status="passed">
          <name><![CDATA[send post "/cashin/pay",{"amount":1000,"destination":"690754334","ptn":"9998547515","callbackUrl":"http://localhost:80/ping","service":"Cashin","spRef":null}]]></name>
        </step>
        <step start="1638402903363" stop="1638402903365" status="passed">
          <name><![CDATA[see response code is 503]]></name>
        </step>
        <step start="1638402903365" stop="1638402903366" status="passed">
          <name><![CDATA[see response contains json {"code":3020,"message":"Remote service is down. Try again later"}]]></name>
        </step>
      </steps>
      <labels>
        <label name="testMethod" value="itCannotProcessATransactionWhenRemoteServerIsDown"/>
        <label name="testClass" value="OrangeOMSystemCest"/>
      </labels>
    </test-case>
    <test-case start="1638402903367" stop="1638402903893" status="passed">
      <name>itCannotProcessATransactionWithInvalidApiKey</name>
      <steps>
        <step start="1638402903814" stop="1638402903814" status="passed">
          <name><![CDATA[have http header "x-api-key","TESTKEY"]]></name>
        </step>
        <step start="1638402903814" stop="1638402903814" status="passed">
          <name><![CDATA[have http header "x-api-version","v1"]]></name>
        </step>
        <step start="1638402903815" stop="1638402903815" status="passed">
          <name><![CDATA[have http header "content-type","application/json"]]></name>
        </step>
        <step start="1638402903815" stop="1638402903867" status="passed">
          <name><![CDATA[send put "http://mockserver:1090/mockserver/reset"]]></name>
        </step>
        <step start="1638402903868" stop="1638402903869" status="passed">
          <name><![CDATA[clear queue "Orange_paymentrequest"]]></name>
        </step>
        <step start="1638402903869" stop="1638402903869" status="passed">
          <name><![CDATA[clear queue "Orange_statuscheck"]]></name>
        </step>
        <step start="1638402903870" stop="1638402903870" status="passed">
          <name><![CDATA[clear queue "Orange_callback"]]></name>
        </step>
        <step start="1638402903870" stop="1638402903871" status="passed">
          <name><![CDATA[clear queue "default"]]></name>
        </step>
        <step start="1638402903871" stop="1638402903871" status="passed">
          <name><![CDATA[have http header "x-api-key","Invalid"]]></name>
        </step>
        <step start="1638402903871" stop="1638402903892" status="passed">
          <name><![CDATA[send post "/cashin/pay",{"amount":1000,"destination":"690754334","ptn":"9998547515","callbackUrl":"http://localhost:80/ping","service":"Cashin","spRef":null}]]></name>
        </step>
        <step start="1638402903893" stop="1638402903893" status="passed">
          <name><![CDATA[see response code is 401]]></name>
        </step>
        <step start="1638402903893" stop="1638402903893" status="passed">
          <name><![CDATA[see response contains json {"code":2401,"message":"The api key is invalid: Invalid"}]]></name>
        </step>
      </steps>
      <labels>
        <label name="testMethod" value="itCannotProcessATransactionWithInvalidApiKey"/>
        <label name="testClass" value="OrangeOMSystemCest"/>
      </labels>
    </test-case>
    <test-case start="1638402903894" stop="1638402904444" status="passed">
      <name>itCanReturnOkWhenPingEndpointIsCalled</name>
      <steps>
        <step start="1638402904367" stop="1638402904367" status="passed">
          <name><![CDATA[have http header "x-api-key","TESTKEY"]]></name>
        </step>
        <step start="1638402904368" stop="1638402904368" status="passed">
          <name><![CDATA[have http header "x-api-version","v1"]]></name>
        </step>
        <step start="1638402904368" stop="1638402904368" status="passed">
          <name><![CDATA[have http header "content-type","application/json"]]></name>
        </step>
        <step start="1638402904369" stop="1638402904418" status="passed">
          <name><![CDATA[send put "http://mockserver:1090/mockserver/reset"]]></name>
        </step>
        <step start="1638402904419" stop="1638402904420" status="passed">
          <name><![CDATA[clear queue "Orange_paymentrequest"]]></name>
        </step>
        <step start="1638402904421" stop="1638402904421" status="passed">
          <name><![CDATA[clear queue "Orange_statuscheck"]]></name>
        </step>
        <step start="1638402904421" stop="1638402904422" status="passed">
          <name><![CDATA[clear queue "Orange_callback"]]></name>
        </step>
        <step start="1638402904422" stop="1638402904422" status="passed">
          <name><![CDATA[clear queue "default"]]></name>
        </step>
        <step start="1638402904423" stop="1638402904443" status="passed">
          <name><![CDATA[send get "/ping"]]></name>
        </step>
        <step start="1638402904443" stop="1638402904443" status="passed">
          <name><![CDATA[see response code is 200]]></name>
        </step>
        <step start="1638402904443" stop="1638402904443" status="passed">
          <name><![CDATA[see response contains json {"status":"OK"}]]></name>
        </step>
      </steps>
      <labels>
        <label name="testMethod" value="itCanReturnOkWhenPingEndpointIsCalled"/>
        <label name="testClass" value="OrangeOMSystemCest"/>
      </labels>
    </test-case>
    <test-case start="1638402904444" stop="1638402915123" status="broken">
      <name>itCanRequestTokenAndSaveInRedis</name>
      <failure>
        <message>AuthRedis: Key "Orange:Cashout" does not exist</message>
        <stack-trace>#0 /tests/vendor/phpunit/phpunit/src/Framework/TestSuite.php(755): Codeception\Test\Test-&gt;run(Object(PHPUnit\Framework\TestResult))
#1 /tests/vendor/codeception/phpunit-wrapper/src/Runner.php(110): PHPUnit\Framework\TestSuite-&gt;run(Object(PHPUnit\Framework\TestResult))
#2 /tests/vendor/codeception/codeception/src/Codeception/SuiteManager.php(158): Codeception\PHPUnit\Runner-&gt;doEnhancedRun(Object(Codeception\Suite), Object(PHPUnit\Framework\TestResult), Array)
#3 /tests/vendor/codeception/codeception/src/Codeception/Codecept.php(193): Codeception\SuiteManager-&gt;run(Object(Codeception\PHPUnit\Runner), Object(PHPUnit\Framework\TestResult), Array)
#4 /tests/vendor/codeception/codeception/src/Codeception/Codecept.php(160): Codeception\Codecept-&gt;runSuite(Array, 'service_orangeo...', 'OrangeOMSystemC...')
#5 /tests/vendor/codeception/codeception/src/Codeception/Command/Run.php(391): Codeception\Codecept-&gt;run('service_orangeo...', 'OrangeOMSystemC...', Array)
#6 /tests/vendor/symfony/console/Command/Command.php(255): Codeception\Command\Run-&gt;execute(Object(Symfony\Component\Console\Input\ArgvInput), Object(Symfony\Component\Console\Output\ConsoleOutput))
#7 /tests/vendor/symfony/console/Application.php(992): Symfony\Component\Console\Command\Command-&gt;run(Object(Symfony\Component\Console\Input\ArgvInput), Object(Symfony\Component\Console\Output\ConsoleOutput))
#8 /tests/vendor/symfony/console/Application.php(255): Symfony\Component\Console\Application-&gt;doRunCommand(Object(Codeception\Command\Run), Object(Symfony\Component\Console\Input\ArgvInput), Object(Symfony\Component\Console\Output\ConsoleOutput))
#9 /tests/vendor/symfony/console/Application.php(148): Symfony\Component\Console\Application-&gt;doRun(Object(Symfony\Component\Console\Input\ArgvInput), Object(Symfony\Component\Console\Output\ConsoleOutput))
#10 /tests/vendor/codeception/codeception/src/Codeception/Application.php(107): Symfony\Component\Console\Application-&gt;run(Object(Symfony\Component\Console\Input\ArgvInput), Object(Symfony\Component\Console\Output\ConsoleOutput))
#11 /tests/vendor/codeception/codeception/codecept(43): Codeception\Application-&gt;run()
#12 {main}</stack-trace>
      </failure>
      <steps>
        <step start="1638402904931" stop="1638402904932" status="passed">
          <name><![CDATA[have http header "x-api-key","TESTKEY"]]></name>
        </step>
        <step start="1638402904932" stop="1638402904932" status="passed">
          <name><![CDATA[have http header "x-api-version","v1"]]></name>
        </step>
        <step start="1638402904932" stop="1638402904932" status="passed">
          <name><![CDATA[have http header "content-type","application/json"]]></name>
        </step>
        <step start="1638402904932" stop="1638402904983" status="passed">
          <name><![CDATA[send put "http://mockserver:1090/mockserver/reset"]]></name>
        </step>
        <step start="1638402904984" stop="1638402904985" status="passed">
          <name><![CDATA[clear queue "Orange_paymentrequest"]]></name>
        </step>
        <step start="1638402904986" stop="1638402904986" status="passed">
          <name><![CDATA[clear queue "Orange_statuscheck"]]></name>
        </step>
        <step start="1638402904986" stop="1638402904987" status="passed">
          <name><![CDATA[clear queue "Orange_callback"]]></name>
        </step>
        <step start="1638402904987" stop="1638402904987" status="passed">
          <name><![CDATA[clear queue "default"]]></name>
        </step>
        <step start="1638402904987" stop="1638402904993" status="passed">
          <name><![CDATA[flush entire cache in redis ]]></name>
        </step>
        <step start="1638402909994" stop="1638402910014" status="passed">
          <name><![CDATA[send put "http://mockserver:1090/mockserver/expectation",{"httpRequest":{"path":"/om/token"},"httpResponse":{"body":"{\n                  "access_token": "abcd-1234",\n                  "expires_in": 3600,...}]]></name>
        </step>
        <step start="1638402910014" stop="1638402910104" status="passed">
          <name><![CDATA[send post "/cashout/pay",{"amount":1000,"destination":"690754334","ptn":"a78da89fafdaa","callbackUrl":"http://localhost:80/ping","service":"Cashout","spRef":null}]]></name>
        </step>
        <step start="1638402915104" stop="1638402915110" status="failed">
          <name><![CDATA[see redis key contains "Orange:Cashout","abcd-1234"]]></name>
        </step>
      </steps>
      <attachments>
        <attachment title="body" source="11858eb0ee280ceb365e2fdb38ec12c581580821-attachment.txt" type="text/plain"/>
        <attachment title="response" source="11858eb0ee280ceb365e2fdb38ec12c581580821-attachment.txt" type="text/plain"/>
      </attachments>
      <labels>
        <label name="testMethod" value="itCanRequestTokenAndSaveInRedis"/>
        <label name="testClass" value="OrangeOMSystemCest"/>
      </labels>
    </test-case>
    <test-case start="1638402915124" stop="1638402920786" status="failed">
      <name>itCanRequestNewTokenAndSaveInRedisIfOldOneHasExpiredInInitEndpoint</name>
      <failure>
        <message>The key "Orange:Cashout" contains "abcd-1234"
Failed asserting that true is false.</message>
        <stack-trace>#0 /tests/vendor/phpunit/phpunit/src/Framework/Constraint/Constraint.php(62): PHPUnit\Framework\Constraint\Constraint-&gt;fail(true, 'The key "Orange...')
#1 /tests/vendor/phpunit/phpunit/src/Framework/Assert.php(2116): PHPUnit\Framework\Constraint\Constraint-&gt;evaluate(true, 'The key "Orange...')
#2 /tests/vendor/phpunit/phpunit/src/Framework/Assert.php(1176): PHPUnit\Framework\Assert::assertThat(true, Object(PHPUnit\Framework\Constraint\IsFalse), 'The key "Orange...')
#3 /tests/vendor/codeception/codeception/src/Codeception/Util/Shared/Asserts.php(273): PHPUnit\Framework\Assert::assertFalse(true, 'The key "Orange...')
#4 /tests/vendor/codeception/codeception/src/Codeception/Module/Redis.php(411): Codeception\Module-&gt;assertFalse(true, 'The key "Orange...')
#5 [internal function]: Codeception\Module\Redis-&gt;dontSeeRedisKeyContains('Orange:Cashout', 'abcd-1234')
#6 /tests/vendor/codeception/codeception/src/Codeception/Step.php(265): call_user_func_array(Array, Array)
#7 /tests/vendor/codeception/codeception/src/Codeception/Scenario.php(72): Codeception\Step-&gt;run(Object(Codeception\Lib\ModuleContainer))
#8 /tests/tests/_helpers/_generated/Service_orangeomTesterActions.php(3429): Codeception\Scenario-&gt;runStep(Object(Codeception\Step\Action))
#9 /tests/tests/service_orangeom/OrangeOMSystemCest.php(138): Service_orangeomTester-&gt;dontSeeRedisKeyContains('Orange:Cashout', 'abcd-1234')
#10 [internal function]: OrangeOMSystemCest-&gt;itCanRequestNewTokenAndSaveInRedisIfOldOneHasExpiredInInitEndpoint(Object(Service_orangeomTester))
#11 /tests/vendor/codeception/codeception/src/Codeception/Lib/Di.php(127): ReflectionMethod-&gt;invokeArgs(Object(OrangeOMSystemCest), Array)
#12 /tests/vendor/codeception/codeception/src/Codeception/Test/Cest.php(138): Codeception\Lib\Di-&gt;injectDependencies(Object(OrangeOMSystemCest), 'itCanRequestNew...', Array)
#13 /tests/vendor/codeception/codeception/src/Codeception/Test/Cest.php(150): Codeception\Test\Cest-&gt;invoke('itCanRequestNew...', Array)
#14 /tests/vendor/codeception/codeception/src/Codeception/Test/Cest.php(82): Codeception\Test\Cest-&gt;executeTestMethod(Object(Service_orangeomTester))
#15 /tests/vendor/codeception/codeception/src/Codeception/Test/Test.php(88): Codeception\Test\Cest-&gt;test()
#16 /tests/vendor/phpunit/phpunit/src/Framework/TestSuite.php(755): Codeception\Test\Test-&gt;run(Object(PHPUnit\Framework\TestResult))
#17 /tests/vendor/codeception/phpunit-wrapper/src/Runner.php(110): PHPUnit\Framework\TestSuite-&gt;run(Object(PHPUnit\Framework\TestResult))
#18 /tests/vendor/codeception/codeception/src/Codeception/SuiteManager.php(158): Codeception\PHPUnit\Runner-&gt;doEnhancedRun(Object(Codeception\Suite), Object(PHPUnit\Framework\TestResult), Array)
#19 /tests/vendor/codeception/codeception/src/Codeception/Codecept.php(193): Codeception\SuiteManager-&gt;run(Object(Codeception\PHPUnit\Runner), Object(PHPUnit\Framework\TestResult), Array)
#20 /tests/vendor/codeception/codeception/src/Codeception/Codecept.php(160): Codeception\Codecept-&gt;runSuite(Array, 'service_orangeo...', 'OrangeOMSystemC...')
#21 /tests/vendor/codeception/codeception/src/Codeception/Command/Run.php(391): Codeception\Codecept-&gt;run('service_orangeo...', 'OrangeOMSystemC...', Array)
#22 /tests/vendor/symfony/console/Command/Command.php(255): Codeception\Command\Run-&gt;execute(Object(Symfony\Component\Console\Input\ArgvInput), Object(Symfony\Component\Console\Output\ConsoleOutput))
#23 /tests/vendor/symfony/console/Application.php(992): Symfony\Component\Console\Command\Command-&gt;run(Object(Symfony\Component\Console\Input\ArgvInput), Object(Symfony\Component\Console\Output\ConsoleOutput))
#24 /tests/vendor/symfony/console/Application.php(255): Symfony\Component\Console\Application-&gt;doRunCommand(Object(Codeception\Command\Run), Object(Symfony\Component\Console\Input\ArgvInput), Object(Symfony\Component\Console\Output\ConsoleOutput))
#25 /tests/vendor/symfony/console/Application.php(148): Symfony\Component\Console\Application-&gt;doRun(Object(Symfony\Component\Console\Input\ArgvInput), Object(Symfony\Component\Console\Output\ConsoleOutput))
#26 /tests/vendor/codeception/codeception/src/Codeception/Application.php(107): Symfony\Component\Console\Application-&gt;run(Object(Symfony\Component\Console\Input\ArgvInput), Object(Symfony\Component\Console\Output\ConsoleOutput))
#27 /tests/vendor/codeception/codeception/codecept(43): Codeception\Application-&gt;run()
#28 {main}</stack-trace>
      </failure>
      <steps>
        <step start="1638402915595" stop="1638402915595" status="passed">
          <name><![CDATA[have http header "x-api-key","TESTKEY"]]></name>
        </step>
        <step start="1638402915596" stop="1638402915596" status="passed">
          <name><![CDATA[have http header "x-api-version","v1"]]></name>
        </step>
        <step start="1638402915596" stop="1638402915596" status="passed">
          <name><![CDATA[have http header "content-type","application/json"]]></name>
        </step>
        <step start="1638402915596" stop="1638402915653" status="passed">
          <name><![CDATA[send put "http://mockserver:1090/mockserver/reset"]]></name>
        </step>
        <step start="1638402915653" stop="1638402915655" status="passed">
          <name><![CDATA[clear queue "Orange_paymentrequest"]]></name>
        </step>
        <step start="1638402915655" stop="1638402915656" status="passed">
          <name><![CDATA[clear queue "Orange_statuscheck"]]></name>
        </step>
        <step start="1638402915656" stop="1638402915656" status="passed">
          <name><![CDATA[clear queue "Orange_callback"]]></name>
        </step>
        <step start="1638402915657" stop="1638402915657" status="passed">
          <name><![CDATA[clear queue "default"]]></name>
        </step>
        <step start="1638402915658" stop="1638402915663" status="passed">
          <name><![CDATA[flush entire cache in redis ]]></name>
        </step>
        <step start="1638402915664" stop="1638402915678" status="passed">
          <name><![CDATA[send put "http://mockserver:1090/mockserver/expectation",{"httpRequest":{"path":"/om/token"},"httpResponse":{"body":"{\n                  "access_token": "new-token",\n                  "expires_in": 3600,...}]]></name>
        </step>
        <step start="1638402915679" stop="1638402915692" status="passed">
          <name><![CDATA[send put "http://mockserver:1090/mockserver/expectation",{"httpRequest":{"path":"/om/cashout/init"},"httpResponse":{"statusCode":401,"body":"{\n                  "fault": {\n                    "code": 900...}]]></name>
        </step>
        <step start="1638402915693" stop="1638402915694" status="passed">
          <name><![CDATA[have in redis "string","Orange:Cashout","s:144:"a:2:{i:0;s:9:"abcd-1234";i:1;O:8:"DateTime":3:{s:4:"date";s:26:"2050-08-04 09:43:20.467598";s:13:"timezone_type";i:3;s:8:"timezone";s:3:"UTC";}}";"]]></name>
        </step>
        <step start="1638402915694" stop="1638402915695" status="passed">
          <name><![CDATA[see redis key contains "Orange:Cashout","abcd-1234"]]></name>
        </step>
        <step start="1638402915695" stop="1638402915695" status="passed">
          <name><![CDATA[don't see redis key contains "Orange:Cashout","new-token"]]></name>
        </step>
        <step start="1638402915696" stop="1638402915778" status="passed">
          <name><![CDATA[send post "/cashout/pay",{"amount":1000,"destination":"690754334","ptn":"a78da89fafdaa","callbackUrl":"http://localhost:80/ping","service":"Cashout","spRef":null}]]></name>
        </step>
        <step start="1638402920779" stop="1638402920780" status="failed">
          <name><![CDATA[don't see redis key contains "Orange:Cashout","abcd-1234"]]></name>
        </step>
      </steps>
      <attachments>
        <attachment title="body" source="8fd583a0cca869fdff532e2ca93f3cb5684c74fd-attachment.txt" type="text/plain"/>
        <attachment title="response" source="8fd583a0cca869fdff532e2ca93f3cb5684c74fd-attachment.txt" type="text/plain"/>
      </attachments>
      <labels>
        <label name="testMethod" value="itCanRequestNewTokenAndSaveInRedisIfOldOneHasExpiredInInitEndpoint"/>
        <label name="testClass" value="OrangeOMSystemCest"/>
      </labels>
    </test-case>
    <test-case start="1638402920786" stop="1638402921399" status="passed">
      <name>itCanReturnHealthStatus</name>
      <steps>
        <step start="1638402921283" stop="1638402921283" status="passed">
          <name><![CDATA[have http header "x-api-key","TESTKEY"]]></name>
        </step>
        <step start="1638402921284" stop="1638402921284" status="passed">
          <name><![CDATA[have http header "x-api-version","v1"]]></name>
        </step>
        <step start="1638402921284" stop="1638402921284" status="passed">
          <name><![CDATA[have http header "content-type","application/json"]]></name>
        </step>
        <step start="1638402921284" stop="1638402921355" status="passed">
          <name><![CDATA[send put "http://mockserver:1090/mockserver/reset"]]></name>
        </step>
        <step start="1638402921355" stop="1638402921358" status="passed">
          <name><![CDATA[clear queue "Orange_paymentrequest"]]></name>
        </step>
        <step start="1638402921358" stop="1638402921359" status="passed">
          <name><![CDATA[clear queue "Orange_statuscheck"]]></name>
        </step>
        <step start="1638402921360" stop="1638402921360" status="passed">
          <name><![CDATA[clear queue "Orange_callback"]]></name>
        </step>
        <step start="1638402921361" stop="1638402921361" status="passed">
          <name><![CDATA[clear queue "default"]]></name>
        </step>
        <step start="1638402921362" stop="1638402921398" status="passed">
          <name><![CDATA[send get "/health"]]></name>
        </step>
        <step start="1638402921398" stop="1638402921398" status="passed">
          <name><![CDATA[see response code is 200]]></name>
        </step>
        <step start="1638402921399" stop="1638402921399" status="passed">
          <name><![CDATA[see response contains json {"components":[{"name":"cpu","status":"NOK"},{"name":"memory","status":"NOK"},{"name":"disk"},{"name":"db","status":"OK"}],"remote":{"status":"OK","info":"OK"},"workload":{"pending":0,"success":0,...}]]></name>
        </step>
      </steps>
      <labels>
        <label name="testMethod" value="itCanReturnHealthStatus"/>
        <label name="testClass" value="OrangeOMSystemCest"/>
      </labels>
    </test-case>
  </test-cases>
</alr:test-suite>
